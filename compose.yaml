services:
  server:
    build:
      context: .
    ports:
      - '8000:8000'

    volumes:
       - ${HOST_EXPERIMENTS_PATH}:/classification
       - ${HOST_DATA_PATH}:/data

    extra_hosts:
      - host.docker.internal:host-gateway

  db:
   image: redis/redis-stack:latest

  
   command: redis-server --requirepass 'test'  --protected-mode yes

   ports:
      - '6379:6379'
      # - '9092:9092'

  vault:
    image: vault:1.13.3
    # container_name: vault_2
    restart: on-failure:10
    ports:
      - "8201:8201"
      - "8200:8200"
    environment:
      VAULT_ADDR: 'http://127.0.0.1:8200'
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "127.0.0.1:8201","tls_disable":"1"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}, "ui": true}'
    cap_add:
      - IPC_LOCK
    healthcheck:
      retries: 1
    command: server -dev -dev-root-token-id='hvsvio2dl8SxHJU83uFk8O8JGGE' 
  
  kafka:
    hostname: kafka
    # container_name: kafka_1
    image: bitnami/kafka:latest
    ports:
          - 9092:9092
          - 9094:9094
    environment:
          # https://habr.com/ru/companies/otus/articles/670440/
          - KAFKA_CFG_NODE_ID=0
          - KAFKA_CFG_PROCESS_ROLES=controller,broker
          - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
          - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
          - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
          - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
          - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  consumer:
    image: consumer:0.1
    # container_name: consumer_2

  # consumer:
  #   image: 
  #   depends_on:
  #     - kafka
  #   networks:
  #     - default